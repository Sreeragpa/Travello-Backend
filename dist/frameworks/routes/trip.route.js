"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cloudinaryService_1 = require("../utils/cloudinaryService");
const trip_repository_1 = require("../../repository/trip.repository");
const trip_usecase_1 = require("../../usecase/trip.usecase");
const trip_controller_1 = require("../../controllers/trip.controller");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const follow_repository_1 = require("../../repository/follow.repository");
const notification_repository_1 = require("../../repository/notification.repository");
const notification_usecase_1 = require("../../usecase/notification.usecase");
const conversation_repository_1 = require("../../repository/conversation.repository");
const router = express_1.default.Router();
const clodinaryService = new cloudinaryService_1.CloudinaryService();
const tripRepository = new trip_repository_1.TripRepository();
const followRepository = new follow_repository_1.FollowRepository();
const notificationRepository = new notification_repository_1.NotificationRepository();
const notificationUsecase = new notification_usecase_1.NotificationUsecase(notificationRepository);
const conversationRepository = new conversation_repository_1.ConversationRepository();
const tripUsecase = new trip_usecase_1.TripUsecase(tripRepository, clodinaryService, followRepository, notificationUsecase, conversationRepository);
const tripController = new trip_controller_1.TripController(tripUsecase);
router.post('/add-trip', auth_middleware_1.authMiddleware, (req, res, next) => tripController.createTrip(req, res, next));
router.get('/get-trip', auth_middleware_1.authMiddleware, (req, res, next) => tripController.getTrips(req, res, next));
router.get('/get-trip/:id', auth_middleware_1.authMiddleware, (req, res, next) => tripController.getTrips(req, res, next));
router.post('/join-trip', auth_middleware_1.authMiddleware, (req, res, next) => tripController.joinTrip(req, res, next));
router.post('/accept-request', auth_middleware_1.authMiddleware, (req, res, next) => tripController.acceptJoinRequest(req, res, next));
router.get('/count', auth_middleware_1.authMiddleware, (req, res, next) => tripController.getTripCount(req, res, next));
router.get('/count/:profileid', auth_middleware_1.authMiddleware, (req, res, next) => tripController.getTripCount(req, res, next));
router.get('/user-trips', auth_middleware_1.authMiddleware, (req, res, next) => tripController.getUserTrips(req, res, next));
router.get('/user-trips/:profileid', auth_middleware_1.authMiddleware, (req, res, next) => tripController.getUserTrips(req, res, next));
router.put('/edit-trip/:id', auth_middleware_1.authMiddleware, (req, res, next) => tripController.updateTrip(req, res, next));
router.get('/search-trip', auth_middleware_1.authMiddleware, (req, res, next) => tripController.searchTrip(req, res, next));
exports.default = router;
